class QueryHistoriesController < ApplicationController
  # GET /query_histories
  # GET /query_histories.json

  respond_to :html, :json
  def index
    @query_histories = QueryHistory.all

    respond_to do |format|
      format.html # index.html.erb
      format.json { render json: @query_histories }
    end
  end

  # GET /query_histories/1
  # GET /query_histories/1.json
  def show
    @query_history = QueryHistory.find(params[:id])

    respond_to do |format|
      format.html # show.html.erb
      format.json { render json: @query_history }
    end
  end

  # GET /query_histories/new
  # GET /query_histories/new.json
  def new
    @query_history = QueryHistory.new

    respond_to do |format|
      format.html # new.html.erb
      format.json { render json: @query_history }
    end
  end

  # GET /query_histories/1/edit
  def edit
    @query_history = QueryHistory.find(params[:id])
  end

  def byuser
    user = User.find_by_email(params[:user_email])
    if user.nil?
      @query_histories = []
    else
      @query_histories = QueryHistory.where(:user_id => user.id)
    end
    respond_with(@query_histories)
    
  end

  def bydoc
    doc_id = params[:doc_id]
    @query_histories = QueryHistory.where(:doc_id => doc_id).joins('INNER JOIN users ON users.id=query_histories.user_id ')

    respond_with(@query_histories)
  end

  # POST /query_histories
  # POST /query_histories.json
  def create
    @query_history = QueryHistory.new(params[:query_history])

    respond_to do |format|
      if @query_history.save
        format.html { redirect_to @query_history, notice: 'Query history was successfully created.' }
        format.json { render json: @query_history, status: :created, location: @query_history }
      else
        format.html { render action: "new" }
        format.json { render json: @query_history.errors, status: :unprocessable_entity }
      end
    end
  end

  # PUT /query_histories/1
  # PUT /query_histories/1.json
  def update
    @query_history = QueryHistory.find(params[:id])

    respond_to do |format|
      if @query_history.update_attributes(params[:query_history])
        format.html { redirect_to @query_history, notice: 'Query history was successfully updated.' }
        format.json { head :no_content }
      else
        format.html { render action: "edit" }
        format.json { render json: @query_history.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /query_histories/1
  # DELETE /query_histories/1.json
  def destroy
    @query_history = QueryHistory.find(params[:id])
    @query_history.destroy

    respond_to do |format|
      format.html { redirect_to query_histories_url }
      format.json { head :no_content }
    end
  end
end
