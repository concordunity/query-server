class UsersController < ApplicationController 

  respond_to :html, :json
  
  def show
    sign_out(@user)
  end

  def index 
    @users = User.all
    roles = []
    @users.each do |u|
       roles.append(u.roles(force_load=true))
    end

    #respond_to do |format|
    #  format.json { render :json => { :users => @users :only => [:email, :last_sign_in_at, :last_sign_in_ip,
    #                                                                     :current_sign_in_at, :current_sign_in_ip ]),
    #      :roles => roles }
    #  }
    #  format.html
    #end
    respond_with(:users => @users, 
                 :roles => roles)
  end

  def update
    @user = User.find(params[:id])
    respond_to do |format|
      if @user.update_attributes(params[:user])
        @user.role_ids = [params[:role].to_i]
        @user.save
        format.html { redirect_to @user, notice: 'User was successfully updated.' }
        format.json { head :no_content }
      else
        format.html { render action: "edit" }
        format.json { render json: @user.errors, status: :unprocessable_entity }
      end
    end
  end

  def get_links
    respond_to do |format|
      format.html { super }
      format.json {

        links = current_user.web_links
        no_links = WebLink.all - links
        render :status => 200, :json => { :error => "Success",
          "web_links" => links,
          "not_authorized" => no_links }
      }
    end
  end

  def newuser
    self.create
  end

  def create
    @user = User.new()
    @user.email = params[:email]
    @user.password = params[:password]
    @user.role_ids = [params[:role].to_i]
    if @user.save
      respond_with(@user)
    else
      response_with(@user) do |format|
        format.html { render action: "new" }
        format.json { render json: @user.errors, status: :unprocessable_entity }
      end
    end
  end

  def destroy
    @user = User.find(params[:id])
    @user.destroy

    respond_to do |format|
      format.html { redirect_to users_url }
      format.json { head :no_content }
    end
  end

end
